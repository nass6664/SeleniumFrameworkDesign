Design Selenium Framework from Scratch
• Why Framework? Its advantages
• Create Maven Structured Framework with all necessary Automation
dependencies
• Select Sample Ecommerce Application to Automate the end-to-end flow
• Implement Page object Model mechanism to drive the locators from respective classes
• Drive object creation within Page object classes encapsulating it from Tests
• Create Base Test which sets browser configuration details and Global properties
• Decide the Test Strategy, how tests should be clubbed & distributed with appropriate annotations
• Create TestNG runner file to trigger the tests with one Single point of
execution control
• Introduce Grouping in TestNG.ml to categorize tests with different tags of execution
• Implement Data driven testing & Parameterization using TestNG Data provider HashMap & Json File readers
• Implement TestNG Listeners to capture Screenshot on automatic test failures and logging
• Create Extent Report wrapper to generate excellent HTML reports for the application
• Make Framework necessary changes to support parallel execution with
Thread safe mechanism
• Implement TestNG retry mechanism to rerun the failed flaky tests in the application
• Run the Framework tests with Maven commands with TestNG Maven integration plugin
• Implement Maven Run time variables to replace global parameters of test data at run time
• Integrate the Framework with Jenkins with Parameterized Build Pipeline
Jobs & Schedule the jobs on specific time frames
• Add Cucumber Wrapper to existing framework with Cucumber TestNG
Runner
• Create Feature files & Step definitions to support Cucumber execution of
Selenium Tests